import telebot
import traceback
import requests
import schedule
import datetime
import time
from multiprocessing import *
import json
import slezhka
import app
import ast

TOKEN = "5059019243:AAHvLlYGSfZudusSa6gpjthnlDbmcXQz_64"

bot = telebot.TeleBot(TOKEN)
cntrs = {"–ò—Å–ø–∞–Ω–∏—è": slezhka.spain,
         "–ê–Ω–≥–ª–∏—è": slezhka.england,
         "–ë—Ä–∞–∑–∏–ª–∏—è": slezhka.braziliya,
         "–§—Ä–∞–Ω—Ü–∏—è": slezhka.france,
         "–ì–æ–ª–ª–∞–Ω–¥–∏—è": slezhka.gollandia,
         "–ò—Ç–∞–ª–∏—è": slezhka.italia,
         "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è": slezhka.portugalia,
         "–®–≤–µ–π—Ü–∞—Ä–∏—è": slezhka.switzerland,
         "–†–æ—Å—Å–∏—è": slezhka.russia}


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    with open('data/users.json') as f:
        users = json.load(f)
    if str(message.chat.id) not in users:
        users[str(message.chat.id)] = {"team": [],
                                       "period": "",
                                       "schetchik_novostey": 0}
    with open('data/users.json', 'w') as file:
        json.dump(users, file, ensure_ascii=False)

    um = telebot.types.ReplyKeyboardMarkup(True, True)
    um.row("–ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç—ã —Å–µ–≥–æ–¥–Ω—è", "–ù–æ–≤–æ—Å—Ç–∏", "–ü–æ–¥–ø–∏—Å–∫–∏")

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Å–ø–æ—Ä—Ç –±–æ—Ç !", reply_markup=um)


@bot.message_handler(commands=['help'])
def help(message: telebot.types.Message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ /matches, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –º–∞—Ç—á–µ–π\n" +
                     "–ù–∞–ø–∏—à–∏—Ç–µ /timer {–ø–µ—Ä–∏–æ–¥ –≤ —á–∞—Å–∞—Ö}, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –ø—Ä–∏—Å—ã–ª–∞–Ω–∏—è "
                     "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n" +
                     "–ù–∞–ø–∏—à–∏—Ç–µ /set_team {–∫–æ–º–∞–Ω–¥–∞}, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª—é–±–æ–º–æ–π –∫–æ–º–∞–Ω–¥–µ")


@bot.message_handler(commands=['timer'])
def set_timer(message: telebot.types.Message):
    pass


@bot.message_handler(commands=['set_team'])
def set_team(message: telebot.types.Message):
    team = str(message.text)[9:]
    print(team)
    with open('data/users.json') as f:
        users = json.load(f)
    # print(users)
    users[str(message.chat.id)] = {"team": team,
                                   "period": ""}
    # print(users)
    with open('data/users.json', 'w') as file:
        json.dump(users, file)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    print(message)
    if message.text == "–ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç—ã —Å–µ–≥–æ–¥–Ω—è":
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–§—É—Ç–±–æ–ª ‚öΩ", "–ë–∞—Å–∫–µ—Ç–±–æ–ª üèÄ", "–•–æ–∫–∫–µ–π üèí")
        um.row("/start")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞ üèÄ‚öΩÔ∏èü§æ‚ÄçÔ∏è‚õπÔ∏è‚ÄçÔ∏è", reply_markup=um)
    elif message.text == "–ù–æ–≤–æ—Å—Ç–∏":
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–ò—Å–ø–∞–Ω–∏—è", "–ê–Ω–≥–ª–∏—è", "–ë—Ä–∞–∑–∏–ª–∏—è")
        um.row("–§—Ä–∞–Ω—Ü–∏—è", "–ì–æ–ª–ª–∞–Ω–¥–∏—è", "–ò—Ç–∞–ª–∏—è")
        um.row("–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è", "–®–≤–µ–π—Ü–∞—Ä–∏—è", "–†–æ—Å—Å–∏—è")
        um.row("/start")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É", reply_markup=um)
    elif message.text == "–ü–æ–¥–ø–∏—Å–∫–∏":
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", "–•–æ—á—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è")
        um.row("/start")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=um)
    elif message.text == "–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏":
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–ü–æ–¥–ø–∏—Å–∫–∏")
        um.row("/start")
        with open('data/users.json') as f:
            users = json.load(f)
            # print(users[str(message.chat.id)]['team'])
            if users[str(message.chat.id)]['team']:
                bot.send_message(message.chat.id, f"–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {', '.join(users[str(message.chat.id)]['team'])}",
                                 reply_markup=um)
            else:
                print(1)
                bot.send_message(message.chat.id, f"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫",
                                 reply_markup=um)
    elif message.text == "–•–æ—á—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è":
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("‚†Ä–ò—Å–ø–∞–Ω–∏—è", "‚†Ä–ê–Ω–≥–ª–∏—è", "‚†Ä–ë—Ä–∞–∑–∏–ª–∏—è")
        um.row("‚†Ä–§—Ä–∞–Ω—Ü–∏—è", "‚†Ä–ì–æ–ª–ª–∞–Ω–¥–∏—è", "‚†Ä–ò—Ç–∞–ª–∏—è")
        um.row("‚†Ä–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è", "‚†Ä–®–≤–µ–π—Ü–∞—Ä–∏—è", "‚†Ä–†–æ—Å—Å–∏—è")
        um.row("/start")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É", reply_markup=um)
    elif message.text.replace('‚†Ä', '') in cntrs and not message.text in cntrs:
        print('asd')
        print(list(slezhka.all_teams.keys()))
        cntr_mas = list(cntrs[message.text.replace('‚†Ä', '')])
        # print(list(cntrs.items()))
        try:
            um = telebot.types.ReplyKeyboardMarkup(True, True)
            um.row('‚†Ä' + cntr_mas[0], '‚†Ä' + cntr_mas[1])
            um.row('‚†Ä' + cntr_mas[2], '‚†Ä' + cntr_mas[3])
            um.row('‚†Ä' + cntr_mas[4], '‚†Ä' + cntr_mas[5])
            um.row('‚†Ä' + cntr_mas[6], '‚†Ä' + cntr_mas[7])
            um.row('‚†Ä' + cntr_mas[8], '‚†Ä' + cntr_mas[9])
            um.row('‚†Ä' + cntr_mas[10], '‚†Ä' + cntr_mas[11])
            um.row('‚†Ä' + cntr_mas[12], '‚†Ä' + cntr_mas[13])
            um.row('‚†Ä' + cntr_mas[14], '‚†Ä' + cntr_mas[15])
        except Exception:
            try:
                um = telebot.types.ReplyKeyboardMarkup(True, True)
                um.row('‚†Ä' + cntr_mas[0], '‚†Ä' + cntr_mas[1])
                um.row('‚†Ä' + cntr_mas[2], '‚†Ä' + cntr_mas[3])
                um.row('‚†Ä' + cntr_mas[4], '‚†Ä' + cntr_mas[5])
                um.row('‚†Ä' + cntr_mas[6], '‚†Ä' + cntr_mas[7])
                um.row('‚†Ä' + cntr_mas[8], '‚†Ä' + cntr_mas[9])
            except Exception:
                um = telebot.types.ReplyKeyboardMarkup(True, True)
                um.row('‚†Ä' + cntr_mas[0], '‚†Ä' + cntr_mas[1], '‚†Ä' + cntr_mas[2])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É", reply_markup=um)
    elif message.text.replace('‚†Ä', '') in list(slezhka.all_teams.keys()) and not message.text in list(
            slezhka.all_teams.keys()):
        print('dsa')

        um = telebot.types.ReplyKeyboardMarkup(True, True)
        with open('data/users.json') as f:
            users = json.load(f)
        print(str(message.chat.id))
        print(users)
        users[''.join(str(message.chat.id))]['team'].append(''.join(str(message.text)).replace('‚†Ä', ''))

        print(users)
        with open('data/users.json', 'w') as file:
            json.dump(json.loads(str(users).replace("'", '"')), file, skipkeys=False, ensure_ascii=True,
                      check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None,
                      sort_keys=False)
        um.row("–ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç—ã —Å–µ–≥–æ–¥–Ω—è", "–ù–æ–≤–æ—Å—Ç–∏", "–ü–æ–¥–ø–∏—Å–∫–∏")
        bot.send_message(message.chat.id, '–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞', reply_markup=um)

    elif message.text in cntrs:
        country = message.text
        cntr_mas = list(cntrs[message.text])
        # print(list(cntrs.items()))
        try:
            um = telebot.types.ReplyKeyboardMarkup(True, True)
            um.row(cntr_mas[0], cntr_mas[1])
            um.row(cntr_mas[2], cntr_mas[3])
            um.row(cntr_mas[4], cntr_mas[5])
            um.row(cntr_mas[6], cntr_mas[7])
            um.row(cntr_mas[8], cntr_mas[9])
            um.row(cntr_mas[10], cntr_mas[11])
            um.row(cntr_mas[12], cntr_mas[13])
            um.row(cntr_mas[14], cntr_mas[15])
            um.row("–ù–æ–≤–æ—Å—Ç–∏")
        except Exception:
            try:
                um = telebot.types.ReplyKeyboardMarkup(True, True)
                um.row(cntr_mas[0], cntr_mas[1])
                um.row(cntr_mas[2], cntr_mas[3])
                um.row(cntr_mas[4], cntr_mas[5])
                um.row(cntr_mas[6], cntr_mas[7])
                um.row(cntr_mas[8], cntr_mas[9])
            except Exception:
                um = telebot.types.ReplyKeyboardMarkup(True, True)
                um.row(cntr_mas[0], cntr_mas[1], cntr_mas[2])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É", reply_markup=um)
    elif message.text in slezhka.all_teams:
        # print(1)
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç—ã —Å–µ–≥–æ–¥–Ω—è", "–ù–æ–≤–æ—Å—Ç–∏", "–ü–æ–¥–ø–∏—Å–∫–∏")
        for i in slezhka.get_news(slezhka.all_teams[message.text])[:4]:
            bot.send_message(message.chat.id, i, reply_markup=um)
    elif message.text == "–§—É—Ç–±–æ–ª ‚öΩ":
        bot.send_message(message.from_user.id, "–ó–∞–≥—Ä—É–∑–∫–∞...")
        for i in app.football():
            bot.send_message(message.from_user.id, i)
        um = telebot.types.ReplyKeyboardMarkup(True, True)
        um.row("–§—É—Ç–±–æ–ª ‚öΩ", "–ë–∞—Å–∫–µ—Ç–±–æ–ª üèÄ", "–•–æ–∫–∫–µ–π üèí")
        um.row("/start")
        bot.send_message(message.chat.id, "–í—Å–µ –º–∞—Ç—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—ã–≤–µ–¥–µ–Ω—ã !", reply_markup=um)
    else:
        pass


def start_process():  # –ó–∞–ø—É—Å–∫ Process
    p1 = Process(target=Evr.start_schedule, args=()).start()


class Evr:

    @staticmethod
    def start_schedule():
        schedule.every(1).hour.do(Evr.send_to_all)

        while True:
            schedule.run_pending()
            time.sleep(1)

    @staticmethod
    def send_to_all():
        with open('data/users.json') as f:
            users = json.load(f)
        for i in users:
            bot.send_message(int(i), "smth")


if __name__ == '__main__':
    start_process()
    try:
        bot.polling(none_stop=True)
    except:
        pass
